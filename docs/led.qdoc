/****************************************************************************
**
** Copyright (C) 2012 Research In Motion Limited.
** All rights reserved.
** Contact: Research In Motion Ltd. (http://www.rim.com/company/contact/)
**
** This file is part of the examples of the BB10 Platform.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Research In Motion Limited.
**
****************************************************************************/

/*!
    \page led
    \example led
    \title Led Example

    \section1 Description

    The LED example exercises the LED API, it demonstrates how to manipulate the
    device led with various colors and flash counts.

    \image led-example.png

    \section1 Overview
    In this example we'll learn how to use the Led object to change the device led
    color and the flash count.

    \section1 UI
    The UI of this sample application consists of a \c DropDown that represent the various
    led color selections, a \c Slider bar to change the flash count and \c Button to start
    and stop a flash cycle.

    The business logic of the application is encapsulated in the Led component which is
    exposed as Led custom component to the UI.

    \snippet led/assets/main.qml 0

    The application initializes the \c DropDown with the different \c{Option}s to allow the user to set the
    device led color. For the 'value' property we use the \c LedColor enums, so that we can bind the 'selectedValue'
    property of the \c DropDown directly against the 'color' property of the \c Led object later on.

    \snippet led/assets/main.qml 1

    The slider is initialized in the range of 1 to 10, which allows a user
    to select a flash count for the led. The custom property 'normalizedValue' is used to access the
    current value rounded to an integer. If the user has selected the maximum value, '-1' is returned, which
    represents the infinite flash count.

    \snippet led/assets/main.qml 2

    There is a single button to start and stop a flash cycle. The text of the button depends on the current state
    of the \c Led object.

    \snippet led/assets/main.qml 3
*/
